generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url = env("DATABASE_URL")
}

enum Role {
USER
ADMIN
}

enum TradeStatus {
PENDING
COMPLETED
CANCELLED
}

enum GiftCardType {
AMAZON
STEAM
APPLE
GOOGLE_PLAY
NETFLIX
}

model User {
id String @id @default(uuid())
username String @unique
email String @unique
password String
role Role @default(USER)
isVerified Boolean @default(false)
verificationCode String? // Optional verification code
verificationExpiresAt DateTime? // When the code should expire
createdAt DateTime @default(now())

// ðŸ‘‡ Relations
giftCards GiftCard[] @relation("UserGiftCards") // As a seller
trades Trade[] @relation("UserTrades") // As a buyer
}

model GiftCard {
id String @id @default(uuid())
type GiftCardType
amount Float
currency String
code String @unique
imageUrl String?
isRedeemed Boolean @default(false)
createdAt DateTime @default(now())

// ðŸ‘‡ Seller relation
seller User @relation(name: "UserGiftCards", fields: [sellerId], references: [id])
sellerId String

// ðŸ‘‡ Trade relation (optional one-to-one)
trade Trade?
}

model Trade {
id String @id @default(uuid())
status TradeStatus @default(PENDING)
createdAt DateTime @default(now())

// ðŸ‘‡ GiftCard relation (one-to-one)
giftCard GiftCard @relation(fields: [giftCardId], references: [id])
giftCardId String @unique

// ðŸ‘‡ Buyer relation (many trades to one user)
buyer User @relation(name: "UserTrades", fields: [buyerId], references: [id])
buyerId String
}
